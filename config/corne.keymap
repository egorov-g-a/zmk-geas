/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// unicode LINUX
#define HOST_OS 1
#include "zmk-helpers/helper.h"
// Source desired key-position labels
#include "zmk-helpers/key-labels/42.h"
// Source unicode-chars for desired languages
#include "zmk-helpers/unicode-chars/russian.dtsi"

#define BASE 0
#define RUS 1
#define NAV 2
#define SYM 3
#define SYS 4
#define MOUSE 5

#define XXX &none
#define ___ &trans

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.9s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

/* Keymap */

// ZMK_CONDITIONAL_LAYER(sys, FN NUM, SYS)  // FN + NUM --> SYS

ZMK_LAYER(base,
//╭───────────┬─────────────┬─────────────┬───────────────┬──────────────┬─────────────╮╭─────────────┬──────────────┬───────────────┬─────────────┬──────────────┬───────────╮
    &tog RUS    &kp B         &kp L         &kp D           &kp W          &kp Z          &kp J         &kp F          &kp O           &kp U         &kp SQT        &kp BSLH
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    &kp TAB     &hml LGUI N   &hml LALT R   &hml LSHFT T    &hml LCTRL S   &kp G          &kp Y         &hmr RCTRL H   &hmr RSHFT A    &hmr RALT E   &hmr RGUI I    &kp SEMI
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    &kp LSHFT   &kp Q         &kp X         &kp M           &kp C          &kp V          &kp K         &kp P          &kp COMMA       &kp DOT       &kp FSLH       &kp ESC
//╰───────────┴─────────────┴─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┴──────────────┴───────────╯
                                            &kp DEL         &mo NAV        &kp SPACE      &kp BSPC      &mo SYM        &kp ENTER
//                                        ╰───────────────┴──────────────┴─────────────╯╰─────────────┴──────────────┴───────────────╯
)

ZMK_LAYER(rus,
//╭───────────┬─────────────┬─────────────┬───────────────┬──────────────┬─────────────╮╭─────────────┬──────────────┬───────────────┬─────────────┬──────────────┬───────────╮
    ___         &kp A         &kp M         &kp LBKT        &kp Z          &kp S          &kp P         &kp D          &kp R           &kp L         &kp X          &kp O
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    ---         &hml LGUI E   &hml LALT B   &hml LSHFT T    &hml LCTRL J   &kp F          &kp K         &hmr RCTRL Y   &hmr RSHFT N    &hmr RALT C   &hmr RGUI H    &kp I
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    ___         &kp Q         &kp RBKT      &kp SQT         &kp DOT        &kp W          &kp COMMA     &kp V          &kp G           &kp U         &kp SEMI       &kp GRAVE
//╰───────────┴─────────────┴─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┴──────────────┴───────────╯
                                            ___             ___            ___            ___           ___            ___
//                                        ╰───────────────┴──────────────┴─────────────╯╰─────────────┴──────────────┴───────────────╯
)

ZMK_LAYER(nav,
//╭───────────┬─────────────┬─────────────┬───────────────┬──────────────┬─────────────╮╭─────────────┬──────────────┬───────────────┬─────────────┬──────────────┬───────────╮
    ___         &bt BT_CLR    &kp N1        &kp N2          &kp N3         &kp CAPS       ___           &kp END        &kp PAGE_DOWN   &kp PAGE_UP   &kp HOME       &kp BSPC
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    ___         &bt BT_SEL 0  &kp N4        &kp N5          &kp N6         ___            ___           &kp LEFT       &kp DOWN        &kp UP        &kp RIGHT      ___
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    ___         &bt BT_SEL 1  &kp N7        &kp N8          &kp N9         &kp N0         ___           ___            ___             ___           ___            ___ 
//╰───────────┴─────────────┴─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┴──────────────┴───────────╯
                                            ___             ___            ___            ___           ___            ___
//                                        ╰───────────────┴──────────────┴─────────────╯╰─────────────┴──────────────┴───────────────╯
)

ZMK_LAYER(sym,
//╭───────────┬─────────────┬─────────────┬───────────────┬──────────────┬─────────────╮╭─────────────┬──────────────┬───────────────┬─────────────┬──────────────┬───────────╮
    ___         &kp GRAVE     &kp EXCL      &kp AT          &kp HASH       ___            ___           ___            &kp LPAR        &kp RPAR      ___            &kp BSPC
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    ___         &kp TILDE     &kp DLLR      &kp PRCNT       &kp CARET      ___            &kp MINUS     &kp EQUAL      &kp LBKT        &kp RBKT      &kp BSLH       ___
//├───────────┼─────────────┼─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┼──────────────┼───────────┤
    ___         ___           &kp AMPS      &kp ASTRK       ___            ___            &kp UNDER     &kp PLUS       &kp LBRC        &kp RBRC      &kp PIPE       ___
//╰───────────┴─────────────┴─────────────┼───────────────┼──────────────┼─────────────┤├─────────────┼──────────────┼───────────────┼─────────────┴──────────────┴───────────╯
                                            ___             ___            ___            ___           ___            ___
//                                        ╰───────────────┴──────────────┴─────────────╯╰─────────────┴──────────────┴───────────────╯
)

/* vim: set ft=c tw=174: */
